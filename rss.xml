<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Brian spiking neural network simulator</title><link>https://briansimulator.org/</link><description>A free, open source simulator for spiking neural networks.</description><atom:link href="https://briansimulator.org/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2020 &lt;a href="mailto:postmaster@briansimulator.org"&gt;Brian team&lt;/a&gt; </copyright><lastBuildDate>Mon, 24 Aug 2020 16:28:25 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>New Brian community forum</title><link>https://briansimulator.org/posts/2020/brian-discourse-forum/</link><dc:creator>Brian team</dc:creator><description>&lt;div&gt;&lt;p&gt;Ask questions, chat and learn with other Brian users, show off what you've done, suggest new features, ... We will try out a brand new forum for support questions
and general discussion, replacing our previous forums on Google Groups. The new forum builds
on the &lt;a href="https://www.discourse.org/"&gt;Discourse&lt;/a&gt; platform which gives us exciting new features
such as giving credit to users for answering questions.&lt;/p&gt;
&lt;p&gt;Please join here &lt;span class="emoji"&gt;ðŸ‘‰&lt;/span&gt; &lt;strong&gt;&lt;a href="https://brian.discourse.group"&gt;brian.discourse.group&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;center&gt;&lt;a href="https://brian.discourse.group"&gt;&lt;img alt="Forum screenshot" src="https://briansimulator.org/images/screenshot_forum.png"&gt;&lt;/a&gt;&lt;/center&gt;&lt;/div&gt;</description><category>community</category><guid>https://briansimulator.org/posts/2020/brian-discourse-forum/</guid><pubDate>Mon, 24 Aug 2020 16:05:44 GMT</pubDate></item><item><title>Brian online tutorial</title><link>https://briansimulator.org/posts/2020/brian-online-tutorial/</link><dc:creator>Brian team</dc:creator><description>&lt;div&gt;&lt;p&gt;We will experiment with running a Brian tutorial online. The first tutorial of
this kind will take place on &lt;strong&gt;Friday, August 7th 2020&lt;/strong&gt; from &lt;strong&gt;2pm-6pm BST&lt;/strong&gt; (UTC+1, see &lt;a href="https://www.timeanddate.com/worldclock/fixedtime.html?msg=Brian+Online+Tutorial&amp;amp;iso=20200807T14&amp;amp;p1=136&amp;amp;ah=4"&gt;here for other timezones&lt;/a&gt;). Free (but mandatory)
registration &lt;a href="https://t.co/zS4VQ4Cp51?amp=1"&gt;here&lt;/a&gt;. We will run the tutorial as
a &lt;a href="https://zoom.us/"&gt;Zoom&lt;/a&gt; meeting â€“ registering with the link will give you the URL (please don't share so we can avoid zoombombing). We will record the meeting and
if everything goes reasonably well, we will upload the videos later.&lt;/p&gt;
&lt;p&gt;If you participate, it would be really helpful if you could download and install Brian before the tutorial so that you can work along with it as we go. Instructions are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download and install the &lt;a href="https://www.anaconda.com/products/individual"&gt;Anaconda Python 3 distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open a command prompt and run the following lines:
    &lt;pre class="code literal-block"&gt;
&lt;i class="fa fa-chevron-right gp" aria-hidden="true"&gt; conda create -n brian_tutorial -c conda-forge python=3 brian2 matplotlib notebook nb_conda_kernels
&lt;i class="fa fa-chevron-right gp" aria-hidden="true"&gt; conda activate brian_tutorial
&lt;i class="fa fa-chevron-right gp" aria-hidden="true"&gt; pip install brian2tools
&lt;/i&gt;&lt;/i&gt;&lt;/i&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;You can now verify this is working by starting a Jupyter notebook server with:
    &lt;pre class="code literal-block"&gt;&lt;i class="fa fa-chevron-right gp" aria-hidden="true"&gt; jupyter notebook&lt;/i&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Your browser should open with the Jupyter notebooks interface. Now create a new notebook and put the following code in an empty cell:
    &lt;pre class="code literal-block"&gt;from brian2 import *&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Run that cell by pressing Ctrl+Enter. If that works without any errors (you might see a warning) then you're good to go.&lt;/li&gt;
&lt;li&gt;If that doesn't work or you want to use a different system than Anaconda, take a look at our &lt;a href="https://brian2.readthedocs.io/en/stable/introduction/install.html"&gt;detailed installation instructions&lt;/a&gt;. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you have trouble installing, don't worry. You can use the &lt;a href="http://mybinder.org/v2/gh/brian-team/brian2-binder/master?filepath=index.ipynb"&gt;Brian installation on Binder&lt;/a&gt; or &lt;a href="https://colab.research.google.com"&gt;Google Colab&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;For Colab, just make the first cell as follows:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;pre class="code literal-block"&gt;
!pip install brian2
!pip install brian2tools
&lt;/pre&gt;
&lt;p&gt;Looking forward to seeing you all on Friday!&lt;/p&gt;&lt;/div&gt;</description><category>Teaching</category><guid>https://briansimulator.org/posts/2020/brian-online-tutorial/</guid><pubDate>Thu, 06 Aug 2020 13:27:27 GMT</pubDate></item><item><title>Making use of Python: threshold finding with bisection</title><link>https://briansimulator.org/posts/2020/elife-3-bisection/</link><dc:creator>Brian team</dc:creator><description>&lt;div&gt;&lt;!-- Functionary(&lt;function Post.__init__.&lt;locals&gt;.&lt;lambda&gt; at 0x7fd2aa8499e0&gt;, {'en': defaultdict(&lt;function get_meta.&lt;locals&gt;.&lt;lambda&gt; at 0x7fd2aa849b90&gt;, {'has_math': 'true', 'previewimage': '/images/articles/2020/elife_example_3_bisection.png', 'title': 'Making use of Python: threshold finding with bisection', 'slug': 'elife-3-bisection', 'date': '2020-01-30 17:46', 'tags': 'model', 'category': 'article', 'updated': '2020-01-30 17:46', 'type': 'text', 'url_type': '', 'priority': '', 'author': '', 'data': '', 'description': '', 'template': '', 'filters': '', 'password': ''})}) --&gt;
    &lt;div class="alert alert-primary notebook-header" role="alert"&gt;
    &lt;p&gt;
    This article is written as a &lt;a href="https://jupyter.org"&gt;Jupyter notebook&lt;/a&gt; which you can execute and modify interactively.
    You can either download it via the "Source" link on the top right, or run it directly in the browser on the
    &lt;a href="https://mybinder.org"&gt;mybinder&lt;/a&gt; infrastructure: &lt;a href="https://mybinder.org/v2/gh/brian-team/briansimulator.org/master?filepath=articles%2F2020%2Felife_example_3_bisection.ipynb"&gt;
    &lt;img src="https://static.mybinder.org/badge_logo.svg" alt="Launch binder" class="d-inline-block"&gt;&lt;/a&gt;
    &lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;For more information, see our general &lt;a href="https://briansimulator.org/posts/2020/notes-notebooks/"&gt;Notes on Notebooks&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
    &lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;div class="notebook-quickstart"&gt;
&lt;h4&gt;Quickstart&lt;/h4&gt;
To run the code below:
&lt;ol&gt;
&lt;li&gt;Click on the cell to select it.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;SHIFT+ENTER&lt;/code&gt; on your keyboard or press the play button
   (&lt;button class="fa fa-play icon-play btn btn-xs btn-default"&gt;&lt;/button&gt;) in the toolbar above&lt;/li&gt;
&lt;/ol&gt;
Feel free to create new cells using the plus button
(&lt;button class="fa fa-plus icon-plus btn btn-xs btn-default"&gt;&lt;/button&gt;), or pressing &lt;code&gt;SHIFT+ENTER&lt;/code&gt; while this cell
is selected.
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This article demonstrates how a control flow, where simulation parameters depend on the results of previous simulations, can be expressed by making use of standard control structures in Python. By having access to the full expressivity of a general purpose programming language, expressing such control flow is straight-forward; this would not be the case for a declarative model description.&lt;/p&gt;
&lt;p&gt;Our goal in this toy example is to find the threshold voltage of neuron as a function of the density of sodium channels.&lt;/p&gt;
&lt;p&gt;This example is from our eLife paper &lt;a href="https://elifesciences.org/articles/47314"&gt;(Stimberg et al. 2019)&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://briansimulator.org/posts/2020/elife-3-bisection/"&gt;Read moreâ€¦&lt;/a&gt; (15 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>model</category><guid>https://briansimulator.org/posts/2020/elife-3-bisection/</guid><pubDate>Thu, 30 Jan 2020 17:46:00 GMT</pubDate></item><item><title>Non-standard neuron modelling: smooth pursuit eye movements</title><link>https://briansimulator.org/posts/2020/elife-2-eye-movements/</link><dc:creator>Brian team</dc:creator><description>&lt;div&gt;&lt;!-- Functionary(&lt;function Post.__init__.&lt;locals&gt;.&lt;lambda&gt; at 0x7fd2aa849680&gt;, {'en': defaultdict(&lt;function get_meta.&lt;locals&gt;.&lt;lambda&gt; at 0x7fd2aa82df80&gt;, {'has_math': 'true', 'previewimage': '/images/articles/2020/elife_example_2_eye_movements.png', 'title': 'Non-standard neuron modelling: smooth pursuit eye movements', 'slug': 'elife-2-eye-movements', 'date': '2020-01-30 17:07', 'tags': 'model, synapses', 'category': 'article', 'updated': '2020-01-30 17:07', 'type': 'text', 'url_type': '', 'priority': '', 'author': '', 'data': '', 'description': '', 'template': '', 'filters': '', 'password': ''})}) --&gt;
    &lt;div class="alert alert-primary notebook-header" role="alert"&gt;
    &lt;p&gt;
    This article is written as a &lt;a href="https://jupyter.org"&gt;Jupyter notebook&lt;/a&gt; which you can execute and modify interactively.
    You can either download it via the "Source" link on the top right, or run it directly in the browser on the
    &lt;a href="https://mybinder.org"&gt;mybinder&lt;/a&gt; infrastructure: &lt;a href="https://mybinder.org/v2/gh/brian-team/briansimulator.org/master?filepath=articles%2F2020%2Felife_example_2_eye_movements.ipynb"&gt;
    &lt;img src="https://static.mybinder.org/badge_logo.svg" alt="Launch binder" class="d-inline-block"&gt;&lt;/a&gt;
    &lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;For more information, see our general &lt;a href="https://briansimulator.org/posts/2020/notes-notebooks/"&gt;Notes on Notebooks&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
    &lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;div class="notebook-quickstart"&gt;
&lt;h4&gt;Quickstart&lt;/h4&gt;
To run the code below:
&lt;ol&gt;
&lt;li&gt;Click on the cell to select it.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;SHIFT+ENTER&lt;/code&gt; on your keyboard or press the play button
   (&lt;button class="fa fa-play icon-play btn btn-xs btn-default"&gt;&lt;/button&gt;) in the toolbar above&lt;/li&gt;
&lt;/ol&gt;
Feel free to create new cells using the plus button
(&lt;button class="fa fa-plus icon-plus btn btn-xs btn-default"&gt;&lt;/button&gt;), or pressing &lt;code&gt;SHIFT+ENTER&lt;/code&gt; while this cell
is selected.
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;In this article we demonstrate how Brian can be used to simulate non-neural aspects of the model. This is an idealized model of the smooth pursuit reflex, including two ocular muscles, a moving visual stimulus and spiking neural control.&lt;/p&gt;
&lt;p&gt;This article is adapted from our eLife paper &lt;a href="https://elifesciences.org/articles/47314"&gt;(Stimberg et al. 2019)&lt;/a&gt;, which includes an interactive version that you can play with &lt;a href="https://github.com/brian-team/brian2_paper_examples"&gt;here&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://briansimulator.org/posts/2020/elife-2-eye-movements/"&gt;Read moreâ€¦&lt;/a&gt; (15 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>model</category><category>synapses</category><guid>https://briansimulator.org/posts/2020/elife-2-eye-movements/</guid><pubDate>Thu, 30 Jan 2020 17:07:00 GMT</pubDate></item><item><title>Non-standard neuron modelling: the pyloric network</title><link>https://briansimulator.org/posts/2020/elife-1-pyloric/</link><dc:creator>Brian team</dc:creator><description>&lt;div&gt;&lt;!-- Functionary(&lt;function Post.__init__.&lt;locals&gt;.&lt;lambda&gt; at 0x7fd2aa8493b0&gt;, {'en': defaultdict(&lt;function get_meta.&lt;locals&gt;.&lt;lambda&gt; at 0x7fd2aa82db90&gt;, {'has_math': 'true', 'previewimage': '/images/articles/2020/elife_example_1_pyloric_network.png', 'title': 'Non-standard neuron modelling: the pyloric network', 'slug': 'elife-1-pyloric', 'date': '2020-01-28 16:46', 'tags': 'model, synapses', 'category': 'article', 'updated': '2020-01-28 16:46', 'type': 'text', 'url_type': '', 'priority': '', 'author': '', 'data': '', 'description': '', 'template': '', 'filters': '', 'password': ''})}) --&gt;
    &lt;div class="alert alert-primary notebook-header" role="alert"&gt;
    &lt;p&gt;
    This article is written as a &lt;a href="https://jupyter.org"&gt;Jupyter notebook&lt;/a&gt; which you can execute and modify interactively.
    You can either download it via the "Source" link on the top right, or run it directly in the browser on the
    &lt;a href="https://mybinder.org"&gt;mybinder&lt;/a&gt; infrastructure: &lt;a href="https://mybinder.org/v2/gh/brian-team/briansimulator.org/master?filepath=articles%2F2020%2Felife_example_1_pyloric_network.ipynb"&gt;
    &lt;img src="https://static.mybinder.org/badge_logo.svg" alt="Launch binder" class="d-inline-block"&gt;&lt;/a&gt;
    &lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;For more information, see our general &lt;a href="https://briansimulator.org/posts/2020/notes-notebooks/"&gt;Notes on Notebooks&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
    &lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;div class="notebook-quickstart"&gt;
&lt;h4&gt;Quickstart&lt;/h4&gt;
To run the code below:
&lt;ol&gt;
&lt;li&gt;Click on the cell to select it.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;SHIFT+ENTER&lt;/code&gt; on your keyboard or press the play button
   (&lt;button class="fa fa-play icon-play btn btn-xs btn-default"&gt;&lt;/button&gt;) in the toolbar above&lt;/li&gt;
&lt;/ol&gt;
Feel free to create new cells using the plus button
(&lt;button class="fa fa-plus icon-plus btn btn-xs btn-default"&gt;&lt;/button&gt;), or pressing &lt;code&gt;SHIFT+ENTER&lt;/code&gt; while this cell
is selected.
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;One of the great advantages of using Brian is that defining new non-standard model types is easy. In this article, we will build a highly simplified model of the pyloric circuit of the crustacean stomatogastric ganglion. This circuit generates a tri-phasic rhythmic pattern with alternating bursts of action potentials in different types of motor neurons. Here, we follow previous work (e.g. Golowasch et al., 1999) by modeling the circuit as consisting of three populations: AB/PD (anterior buster and pyloric dilator neurons), LP (lateral pyloric neurons), and PY (pyloric neurons). This model has a number of non-standard properties that will be described in the following annotated version of the code.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Golowasch, J., Casey, M., Abbott, L. F., &amp;amp; Marder, E. (1999).&lt;br&gt;
Network Stability from Activity-Dependent Regulation of Neuronal Conductances.&lt;br&gt;
Neural Computation, 11(5), 1079-1096.&lt;br&gt;
&lt;a href="https://doi.org/10.1162/089976699300016359"&gt;https://doi.org/10.1162/089976699300016359&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This article was based on one of the examples from our eLife paper &lt;a href="https://elifesciences.org/articles/47314"&gt;(Stimberg et al. 2019)&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://briansimulator.org/posts/2020/elife-1-pyloric/"&gt;Read moreâ€¦&lt;/a&gt; (19 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>model</category><category>synapses</category><guid>https://briansimulator.org/posts/2020/elife-1-pyloric/</guid><pubDate>Tue, 28 Jan 2020 16:46:00 GMT</pubDate></item><item><title>Notes on Notebooks</title><link>https://briansimulator.org/posts/2020/notes-notebooks/</link><dc:creator>Brian team</dc:creator><description>&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;The articles in this blog are written as &lt;a href="https://jupyter.org/"&gt;Jupyter notebooks&lt;/a&gt; â€“ interactive documents that contain text, Python code, and the results of running the code (i.e. text or figures). This article gives some details on the various ways to use them and explains common commands we use when presenting Brian code.&lt;/p&gt;
&lt;p&gt;While the documents are "static" on this website, i.e. you can neither change nor run the code, you have two options to interactively explore and modify their content:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://briansimulator.org/posts/2020/notes-notebooks/"&gt;Read moreâ€¦&lt;/a&gt; (26 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>notes</category><guid>https://briansimulator.org/posts/2020/notes-notebooks/</guid><pubDate>Tue, 28 Jan 2020 16:12:22 GMT</pubDate></item><item><title>GSoC 2020: work on Brian during the summer</title><link>https://briansimulator.org/posts/2020/gsoc-2020-work-on-brian-during-the-summer/</link><dc:creator>Brian team</dc:creator><description>&lt;p&gt;The &lt;a href="https://incf.org"&gt;&lt;abbr title=" International Neuroinformatics Coordinating Facility"&gt;INCF&lt;/abbr&gt;&lt;/a&gt; is again applying to be a mentor organization in &lt;a href="https://summerofcode.withgoogle.com/"&gt;Google's Summer of Code program&lt;/a&gt;, a "a global program focused on bringing more student developers into open source software development". Changes are quite high that it will be selected, since its participation in the last years was very successful. If this is the case, there will be an opportunity to work on the Brian simulator, please see the list of &lt;a href="https://docs.google.com/document/d/19xlhgizLcv5x4kjap3nXoQMTNGnxaV-qiq0vrSe-HMo"&gt;proposed projects&lt;/a&gt; (Brian projects are number 8 and 9). Feel free to ask questions or discuss the project on the &lt;a href="https://neurostars.org/"&gt;Neurostars forum&lt;/a&gt; (find all projects in the &lt;em&gt;GSoC&lt;/em&gt; category). It is not mandatory to work on one of the proposed projects, though, please contact &lt;a href="mailto:marcel.stimberg@inserm.fr"&gt;marcel.stimberg@inserm.fr&lt;/a&gt; if you have an idea of your own.&lt;/p&gt;</description><category>GSoC</category><guid>https://briansimulator.org/posts/2020/gsoc-2020-work-on-brian-during-the-summer/</guid><pubDate>Fri, 24 Jan 2020 09:18:16 GMT</pubDate></item><item><title>Brian2GeNN paper published: accelerate Brian simulations with GPUs</title><link>https://briansimulator.org/posts/2020/brian2genn-paper/</link><dc:creator>Brian team</dc:creator><description>&lt;div&gt;&lt;p&gt;Our paper on &lt;a href="https://brian2genn.readthedocs.io/en/stable/"&gt;brian2genn&lt;/a&gt; was published today. It automatically translates
Brian models into a format that can be read by the
&lt;a href="https://genn-team.github.io/genn/"&gt;GPU-enhanced neural network simulator (GeNN)&lt;/a&gt; to allow it to run on GPU. Some
simulations were 400x faster on GPU compared to a single CPU.&lt;/p&gt;
&lt;div class="bg-light p-4"&gt;
&lt;p&gt;
Stimberg M, Goodman DFM, Nowotny T (2020)&lt;br&gt;
&lt;a href="https://www.nature.com/articles/s41598-019-54957-7"&gt;Brian2GeNN: a system for accelerating a large variety of spiking neural networks with graphics hardware&lt;/a&gt;&lt;br&gt;
&lt;i&gt;Scientific Reports&lt;/i&gt; &lt;span class="text-muted"&gt;10, 410. doi: 10.1038/s41598-019-54957-7 
&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>brian2genn</category><category>publication</category><guid>https://briansimulator.org/posts/2020/brian2genn-paper/</guid><pubDate>Wed, 15 Jan 2020 09:18:16 GMT</pubDate></item><item><title>New release: Brian 2.3</title><link>https://briansimulator.org/posts/2020/brian-23/</link><dc:creator>Brian team</dc:creator><description>&lt;div&gt;&lt;p&gt;Happy New Year to all Brian users &lt;span class="emoji"&gt;ðŸŽ‰&lt;/span&gt;! We are happy to announce a new release, &lt;strong&gt;Brian 2.3&lt;/strong&gt;. This release fixes a number of bugs and introduces some new features. It also paves the way for the transition from Python 2 to Python 3 â€“ given that Python 2 is now &lt;a href="https://www.python.org/doc/sunset-python-2/"&gt;no longer officially supported&lt;/a&gt;, Brian 2.3 will be the last release to support Python 2. For a full list of changes, see the &lt;a href="http://brian2.readthedocs.io/en/2.3/introduction/release_notes.html"&gt;release notes&lt;/a&gt;. We recommend all users of Brian 2 to update.&lt;/p&gt;
&lt;p&gt;Brian 2 can be installed with Anaconda from the &lt;a href="https://anaconda.org/conda-forge/brian2"&gt;conda-forge channel&lt;/a&gt; (packages are provided for Python 2.7, 3.6, 3.7, 3.8), or with pip from the &lt;a href="https://pypi.org/project/Brian2/"&gt;pypi repository&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As always, please report bugs or suggestions to the &lt;a href="https://github.com/brian-team/brian2/issues"&gt;github bug tracker&lt;/a&gt; or to the &lt;a href="https://groups.google.com/forum/#!forum/brian-development"&gt;brian-development mailing list&lt;/a&gt; (&lt;a href="mailto:brian-development@googlegroups.com"&gt;brian-development@googlegroups.com&lt;/a&gt;).&lt;/p&gt;&lt;/div&gt;</description><category>Development</category><category>Release</category><guid>https://briansimulator.org/posts/2020/brian-23/</guid><pubDate>Mon, 06 Jan 2020 14:06:02 GMT</pubDate></item><item><title>Paper on Brian 2 published in eLife</title><link>https://briansimulator.org/posts/paper-on-brian-2-published-in-elife/</link><dc:creator>Brian team</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;We are happy to report that our paper "Brian 2, an intuitive and efficient neural simulator" has been accepted for publication in &lt;em&gt;eLife&lt;/em&gt;: &lt;a href="https://elifesciences.org/articles/47314"&gt;https://elifesciences.org/articles/47314&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;

&lt;p&gt;In this paper, we describe a number of examples that showcase various features of Brian 2, ranging from non-standard neuronal/synaptic models to interacting with hardware in real time via C++ code. All the code to run these examples is openly available in a &lt;a href="https://github.com/brian-team/brian2_paper_examples"&gt;github repository&lt;/a&gt;. &lt;br&gt;The examples are provided as interactive jupyter notebooks, and can be tried out without a local installation of Brian by running them on the &lt;a href="https://mybinder.org/v2/gh/brian-team/brian2_paper_examples/master?filepath=index.ipynb"&gt;binder infrastructure&lt;/a&gt;.&lt;/p&gt;

&lt;!-- /wp:paragraph --&gt;

&lt;p&gt;&lt;/p&gt;&lt;/div&gt;</description><category>publication</category><guid>https://briansimulator.org/posts/paper-on-brian-2-published-in-elife/</guid><pubDate>Wed, 21 Aug 2019 10:56:19 GMT</pubDate></item></channel></rss>