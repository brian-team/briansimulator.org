<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Brian spiking neural network simulator (Posts by Brian team)</title><link>https://briansimulator.org/</link><description></description><atom:link href="https://briansimulator.org/authors/brian-team.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2022 &lt;a href="mailto:postmaster@briansimulator.org"&gt;Brian team&lt;/a&gt; </copyright><lastBuildDate>Mon, 27 Jun 2022 15:14:47 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>CNS 2022 satellite tutorial on Brian (June 30th)</title><link>https://briansimulator.org/posts/2022/cns-satellite-tutorial/</link><dc:creator>Brian team</dc:creator><description>&lt;p&gt;On June 30th, 2022, we will have a &lt;strong&gt;Brian tutorial&lt;/strong&gt;, as part of a series of free satellite tutorials organized by the &lt;a href="https://ocns.github.io/SoftwareWG/"&gt;INCF/OCNS Software Working Group&lt;/a&gt; two weeks before &lt;a href="https://www.cnsorg.org/cns-2022"&gt;CNS&lt;code&gt;*&lt;/code&gt;2022&lt;/a&gt;.
You can find more information about the tutorials here: &lt;a href="https://ocns.github.io/SoftwareWG/pages/software-wg-satellite-tutorials-at-cns-2022.html"&gt;ocns.github.io/SoftwareWG/pages/software-wg-satellite-tutorials-at-cns-2022.html&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;Please &lt;a href="https://framaforms.org/incfocns-software-wg-cns2022-satellite-tutorials-registration-1654593600"&gt;&lt;strong&gt;register here&lt;/strong&gt;&lt;/a&gt; if you have not done so yet. &lt;em&gt;Registration is free but mandatory&lt;/em&gt;. You have to be registered to get access to the Zoom link.&lt;/p&gt;
&lt;h3&gt;Schedule (&lt;strong&gt;Thursday, June 30th 2022&lt;/strong&gt;)&lt;/h3&gt;
&lt;p&gt;The preliminary schedule of the tutorial is as follows (times are in UTC, but by clicking on them you get the times in your time zone):&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://www.timeanddate.com/worldclock/fixedtime.html?msg=Brian+tutorial%2C+part+1&amp;amp;iso=20220630T1030&amp;amp;p1=%3A&amp;amp;ah=1&amp;amp;am=30"&gt;10:30 – 12:00 (UTC)&lt;/a&gt;: &lt;strong&gt;Part 1, Introduction to Brian&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;An introduction for users that have little experience with Brian, roughly following the material in the &lt;a href="https://brian2.readthedocs.io/en/stable/resources/tutorials/index.html"&gt;Brian tutorials&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://www.timeanddate.com/worldclock/fixedtime.html?msg=Brian+tutorial%2C+part+2&amp;amp;iso=20220630T1200&amp;amp;p1=%3A&amp;amp;ah=0&amp;amp;am=45"&gt;12:00 – 12:45 (UTC)&lt;/a&gt;: &lt;strong&gt;Part 2, The Brian ecosystem&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;An overview of existing packages that make Brian more convenient to use and more powerful. In particular:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://brian2tools.readthedocs.io/"&gt;&lt;code&gt;brian2tools&lt;/code&gt;&lt;/a&gt;, providing tools for for visualization and model import/export&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brian2modelfitting.readthedocs.io"&gt;&lt;code&gt;brian2modelfitting&lt;/code&gt;&lt;/a&gt;, supporting automatic fits of model parameters&lt;/li&gt;
&lt;li&gt;&lt;a href="https://brian2genn.readthedocs.io"&gt;&lt;code&gt;brian2genn&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://brian2cuda.readthedocs.io"&gt;&lt;code&gt;brian2cuda&lt;/code&gt;&lt;/a&gt;, accelerating Brian simulations by running them on the GPU.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a href="https://www.timeanddate.com/worldclock/fixedtime.html?msg=Brian+tutorial%2C+part+3&amp;amp;iso=20220630T1245&amp;amp;p1=%3A&amp;amp;ah=0&amp;amp;am=45"&gt;12:45 – 13:30 (UTC)&lt;/a&gt;: &lt;strong&gt;Part 3, Best practice and performance&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;A number of practical tips and demonstrations, showing how to structure code for readability and performance.&lt;/p&gt;
&lt;h3&gt;Platform&lt;/h3&gt;
&lt;p&gt;The tutorial will take place on the &lt;a href="https://docs.opensourcebrain.org/OSBv2/Guided_tour.html#osbv2-guidedtour"&gt;Open Source Brian v2 (OSBv2)&lt;/a&gt; platform, allowing everyone to participate without the need for a local installation of Brian.&lt;/p&gt;</description><category>Teaching</category><guid>https://briansimulator.org/posts/2022/cns-satellite-tutorial/</guid><pubDate>Mon, 27 Jun 2022 14:55:00 GMT</pubDate></item><item><title>Recommendations for GSoC 2022 applications</title><link>https://briansimulator.org/posts/2022/gsoc-applications/</link><dc:creator>Brian team</dc:creator><description>&lt;p&gt;The application period for the Google Summer of Code 2022 starts on April 4th (full &lt;a href="https://developers.google.com/open-source/gsoc/timeline"&gt;timeline for GSoC 2022&lt;/a&gt;). With this post we give some general information about the ideal contributor application from our point of view. The recommendations we give here hold for all of the proposed projects, but we will also try to give information specific to the respective projects in the corresponding &lt;a href="https://neurostars.org/"&gt;neurostars&lt;/a&gt; threads. For a full list of Brian-related projects, see the end of this post.&lt;/p&gt;
&lt;p&gt;Before you consider submitting an application, make sure you fit the &lt;a href="https://developers.google.com/open-source/gsoc/faq#what_are_the_eligibility_requirements_for_participation"&gt;general eligibility criteria&lt;/a&gt;. Note that several online sources, including the &lt;a href="https://developers.google.com/open-source/gsoc/faq"&gt;GSoC FAQ&lt;/a&gt;, still sometimes refer to Google Summer of Code &lt;em&gt;students&lt;/em&gt; instead of &lt;em&gt;contributors&lt;/em&gt;. This is now a misnomer, though, since the program is open to all “open source beginners” (at least 18 years of age), regardless of whether they are enrolled as students or not. That said, you need to be available to invest around 175h to 350h (depending on the project) over the summer, so this program is hardly compatible with a full-time employment.&lt;/p&gt;
&lt;p&gt;Please contact us in the respective neurostars discussion, to make us aware that you are interested in the project. This is also the best place to ask about anything that is unclear in the project description, or about any questions or doubts you have.&lt;/p&gt;
&lt;p&gt;Your application should convince us that:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;You understand what the project is about: what is the problem or missing feature in Brian (or related project) that the project is trying to address? How does the proposed project solve the problem or adds the feature?&lt;/li&gt;
&lt;li&gt;You understand what steps are necessary to implement the proposed solution, and can give rough estimates of how long these steps will take.&lt;/li&gt;
&lt;li&gt;You have most or all of the necessary skills to implement the proposed solution and can acquire the missing skills during the project.&lt;/li&gt;
&lt;li&gt;You can commit the required time over the summer. Note that the program has some flexibility in the schedule. Importantly, please be realistic and honest – do not try to make the schedule work by planning with, say, 70h of work in a single week.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For all of the above points, please fill it out with concrete details and link to other sources where helpful. For example, you might want to link to specific bits of the documentation that you deem relevant to the project and discuss them. Regarding your skills, they are ideally illustrated by concrete evidence as well, e.g. a link to a student project you wrote in Python, or a link to a website you set up.&lt;/p&gt;
&lt;p&gt;While it is not a strict requirement, we highly recommend to base your application on the &lt;a href="https://www.incf.org/sites/default/files/files/INCF_GSoC_2022_Application_template.pdf"&gt;INCF GSoC Application template&lt;/a&gt;. As soon as you have a draft that you’d like to have feedback on, please contact us directly (e.g. over a direct message on neurostars) with a link to the draft – a &lt;a href="https://docs.google.com/"&gt;Google Docs&lt;/a&gt; document is probably the easiest solution.&lt;/p&gt;
&lt;p&gt;As a final note: we cannot promise how many students we can accept to work on Brian with GSoC this year – it is even possible that we cannot accept anyone! To give you a rough idea of how the process works: after reviewing the received applications, all the projects participating under the umbrella of the &lt;a href="https://www.incf.org"&gt;INCF&lt;/a&gt; will come up with a list of students they’d like to accept. The INCF will then transmit the number of requested “slots” to Google, which will finally decide the number of slots that it assigns to each organisation. This number of assigned slots is typically lower than the requested number, therefore not all students that were reviewed positively can be accepted. For a project like Brian, realistically we can only expect to receive a single slot and therefore only accept a single student for one of our proposed projects…&lt;/p&gt;
&lt;p&gt;We hope that this makes the application process a bit clearer, looking forward to discussing your applications, and hopefully to work with one of you over this summer!&lt;/p&gt;
&lt;h3&gt;Neurostars discussions for Brian-related projects&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://neurostars.org/t/gsoc-2022-project-idea-10-1-make-brian-run-in-the-web-browser-via-pyodide-175-350-h/"&gt;Project Idea 10.1: Make Brian run in the web browser via Pyodide (175/350 h)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neurostars.org/t/gsoc-2022-project-idea-10-2-make-brian-run-in-the-web-browser-via-emscripten-175-350-h/"&gt;Project Idea 10.2: Make Brian run in the web browser via emscripten (175/350 h)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neurostars.org/t/gsoc-2022-project-idea-10-3-update-brian-documentation-infrastructure-175-h/"&gt;Project Idea 10.3: Update Brian documentation infrastructure (175 h)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neurostars.org/t/gsoc-2022-project-idea-10-4-improved-openmp-support-synaptic-propagation-175-350-h/"&gt;Project Idea 10.4: Improved OpenMP support (synaptic propagation) (175/350 h)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neurostars.org/t/gsoc-2022-project-idea-10-5-improved-parser-for-model-descriptions-175-h/"&gt;Project Idea 10.5: Improved parser for model descriptions (175 h)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neurostars.org/t/gsoc-2022-project-idea-4-2-brian2genn-350-h/"&gt;Project Idea 4.2: Brian2GeNN (350 h)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><category>Development</category><category>GSoC</category><guid>https://briansimulator.org/posts/2022/gsoc-applications/</guid><pubDate>Fri, 25 Mar 2022 21:00:00 GMT</pubDate></item><item><title>New release: Brian 2.5</title><link>https://briansimulator.org/posts/2021/brian-25/</link><dc:creator>Brian team</dc:creator><description>&lt;p&gt;It took us a while, but we are very happy to finally announce a new release, &lt;strong&gt;Brian 2.5&lt;/strong&gt; 🎉. This release comes with a large number of bug fixes, various small improvements to the C++ code generation process, new examples and improved documentation, as well as a more powerful “generator syntax” for synapse generation. In particular, it is now possible to generate a fixed number of synapses randomly – either for each pre-synaptic or for each post-synaptic cell. We have also updated our build and testing infrastructure, and now provide binary pip-installable packages for all platforms, including the fancy new Apple hardware. Please let us know if you run into any issues!&lt;/p&gt;
&lt;p&gt;As always, Brian 2 can be installed with Anaconda from the &lt;a href="https://anaconda.org/conda-forge/brian2"&gt;conda-forge channel&lt;/a&gt; (packages are provided for Python 3.7–3.10), or with pip from the &lt;a href="https://pypi.org/project/Brian2/"&gt;pypi repository&lt;/a&gt;. See the &lt;a href="https://brian2.readthedocs.io/en/2.5.0.1/introduction/install.html"&gt;installation instructions&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Thanks to everyone who contributed 🤝!&lt;/p&gt;
&lt;p&gt;For all the details about this new release, please have a look at the &lt;a href="https://brian2.readthedocs.io/en/2.5.0.1/introduction/release_notes.html"&gt;release notes&lt;/a&gt;.&lt;/p&gt;</description><category>Development</category><category>Release</category><guid>https://briansimulator.org/posts/2021/brian-25/</guid><pubDate>Mon, 29 Nov 2021 12:15:00 GMT</pubDate></item><item><title>Live session on Brian development</title><link>https://briansimulator.org/posts/2021/live-session-on-brian-development/</link><dc:creator>Brian team</dc:creator><description>&lt;p&gt;Marcel Stimberg will talk about Brian’s development process in a live developer session on &lt;strong&gt;Thursday, Feb 11 2021, 17:00 UTC&lt;/strong&gt; (check &lt;a href="https://www.timeanddate.com/worldclock/fixedtime.html?msg=Dev+session%3A+Marcel+Stimberg%3A+Brian+Simulator&amp;amp;iso=20210211T17&amp;amp;p1=136&amp;amp;ah=1"&gt;local time&lt;/a&gt;). 
For more information and the link to the Zoom session see the &lt;a href="https://ocns.github.io/SoftwareWG/2021/02/07/dev-session-marcel-stimberg-brian-simulator.html"&gt;announcement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This talk is part of a series of sessions organized by the newly formed &lt;a href="https://ocns.github.io/SoftwareWG/"&gt;Software Working Group&lt;/a&gt; under the umbrella of the &lt;a href="https://www.incf.org/"&gt;INCF&lt;/a&gt; and &lt;a href="https://www.cnsorg.org/"&gt;OCNS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; The video for the recorded sessions is now on Youtube:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="text-error"&gt;In order to use the media directive, you must install the "micawber" Python package.&lt;/div&gt;</description><category>Development</category><category>Teaching</category><guid>https://briansimulator.org/posts/2021/live-session-on-brian-development/</guid><pubDate>Mon, 08 Feb 2021 09:45:07 GMT</pubDate></item><item><title>Getting the timing right (scheduling 2)</title><link>https://briansimulator.org/posts/2020/video-scheduling-2/</link><dc:creator>Brian team</dc:creator><description>&lt;figure&gt;&lt;img src="https://briansimulator.org/images/articles/2020/scheduling_2.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;div class="alert alert-primary notebook-header" role="alert"&gt;
    &lt;p&gt;
    This article is written as a &lt;a href="https://jupyter.org"&gt;Jupyter notebook&lt;/a&gt; which you can execute and modify interactively.
    You can either download it via the "Source" link on the top right, or run it directly in the browser on the
    &lt;a href="https://mybinder.org"&gt;mybinder&lt;/a&gt; infrastructure: &lt;a href="https://mybinder.org/v2/gh/brian-team/briansimulator.org/master?filepath=articles%2F2020%2Fscheduling_2.ipynb"&gt;
    &lt;img src="https://static.mybinder.org/badge_logo.svg" alt="Launch binder" class="d-inline-block"&gt;&lt;/a&gt;
    &lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;For more information, see our general &lt;a href="https://briansimulator.org/posts/2020/notes-notebooks/"&gt;Notes on Notebooks&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
    &lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;div class="notebook-quickstart"&gt;
&lt;h4&gt;Quickstart&lt;/h4&gt;
To run the code below:
&lt;ol&gt;
&lt;li&gt;Click on the cell to select it.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;SHIFT+ENTER&lt;/code&gt; on your keyboard or press the play button
   (&lt;button class="fa fa-play icon-play btn btn-xs btn-default"&gt;&lt;/button&gt;) in the toolbar above&lt;/li&gt;
&lt;/ol&gt;
Feel free to create new cells using the plus button
(&lt;button class="fa fa-plus icon-plus btn btn-xs btn-default"&gt;&lt;/button&gt;), or pressing &lt;code&gt;SHIFT+ENTER&lt;/code&gt; while this cell
is selected.
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;"Scheduling": mechanism to determine the order of operations during a simulation&lt;/p&gt;
&lt;p&gt;In this video we will look at its importance for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;propagating synaptic activity&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;You can also watch the &lt;a href="https://youtu.be/VwUqKwHtVJM"&gt;&lt;i class="fab fa-youtube"&gt;&lt;/i&gt;  screencast video on Youtube&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://briansimulator.org/posts/2020/video-scheduling-2/"&gt;Read more…&lt;/a&gt; (46 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>training</category><category>video</category><guid>https://briansimulator.org/posts/2020/video-scheduling-2/</guid><pubDate>Thu, 08 Oct 2020 09:00:00 GMT</pubDate></item><item><title>New release: Brian 2.4</title><link>https://briansimulator.org/posts/2020/brian-24/</link><dc:creator>Brian team</dc:creator><description>&lt;p&gt;In these very particular times, we are nevertheless happy to announce a new release, &lt;strong&gt;Brian 2.4&lt;/strong&gt;. This release fixes a large number of bugs and includes a number of small improvements. As announced with the previous release, Brian 2.4 is the first release that no longer supports Python 2. For a full list of changes, see the &lt;a href="http://brian2.readthedocs.io/en/2.4/introduction/release_notes.html"&gt;release notes&lt;/a&gt;. We recommend all users of Brian 2 to update.&lt;/p&gt;
&lt;p&gt;As always, Brian 2 can be installed with Anaconda from the &lt;a href="https://anaconda.org/conda-forge/brian2"&gt;conda-forge channel&lt;/a&gt; (packages are provided for Python 3.6, 3.7, 3.8), or with pip from the &lt;a href="https://pypi.org/project/Brian2/"&gt;pypi repository&lt;/a&gt;. See the &lt;a href="https://briansimulator.org/install"&gt;installation instructions&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;In case of questions or issues, please join us in the Brian support forum at &lt;a href="https://brian.discourse.group"&gt;brian.discourse.group&lt;/a&gt;.&lt;/p&gt;</description><category>Development</category><category>Release</category><guid>https://briansimulator.org/posts/2020/brian-24/</guid><pubDate>Mon, 07 Sep 2020 09:15:00 GMT</pubDate></item><item><title>Getting the timing right (scheduling 1)</title><link>https://briansimulator.org/posts/2020/video-scheduling-1/</link><dc:creator>Brian team</dc:creator><description>&lt;figure&gt;&lt;img src="https://briansimulator.org/images/articles/2020/scheduling_1.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;div class="alert alert-primary notebook-header" role="alert"&gt;
    &lt;p&gt;
    This article is written as a &lt;a href="https://jupyter.org"&gt;Jupyter notebook&lt;/a&gt; which you can execute and modify interactively.
    You can either download it via the "Source" link on the top right, or run it directly in the browser on the
    &lt;a href="https://mybinder.org"&gt;mybinder&lt;/a&gt; infrastructure: &lt;a href="https://mybinder.org/v2/gh/brian-team/briansimulator.org/master?filepath=articles%2F2020%2Fscheduling_1.ipynb"&gt;
    &lt;img src="https://static.mybinder.org/badge_logo.svg" alt="Launch binder" class="d-inline-block"&gt;&lt;/a&gt;
    &lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;For more information, see our general &lt;a href="https://briansimulator.org/posts/2020/notes-notebooks/"&gt;Notes on Notebooks&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
    &lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;div class="notebook-quickstart"&gt;
&lt;h4&gt;Quickstart&lt;/h4&gt;
To run the code below:
&lt;ol&gt;
&lt;li&gt;Click on the cell to select it.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;SHIFT+ENTER&lt;/code&gt; on your keyboard or press the play button
   (&lt;button class="fa fa-play icon-play btn btn-xs btn-default"&gt;&lt;/button&gt;) in the toolbar above&lt;/li&gt;
&lt;/ol&gt;
Feel free to create new cells using the plus button
(&lt;button class="fa fa-plus icon-plus btn btn-xs btn-default"&gt;&lt;/button&gt;), or pressing &lt;code&gt;SHIFT+ENTER&lt;/code&gt; while this cell
is selected.
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;"Scheduling": mechanism to determine the order of operations during a simulation&lt;/p&gt;
&lt;p&gt;In this notebook we will look at its importance for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;recording values with a &lt;code&gt;StateMonitor&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also watch the &lt;a href="https://youtu.be/ib0UMU-H6eY"&gt;&lt;i class="fab fa-youtube"&gt;&lt;/i&gt;  screencast video on Youtube&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://briansimulator.org/posts/2020/video-scheduling-1/"&gt;Read more…&lt;/a&gt; (27 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>training</category><category>video</category><guid>https://briansimulator.org/posts/2020/video-scheduling-1/</guid><pubDate>Fri, 04 Sep 2020 13:00:00 GMT</pubDate></item><item><title>New Brian community forum</title><link>https://briansimulator.org/posts/2020/brian-discourse-forum/</link><dc:creator>Brian team</dc:creator><description>&lt;p&gt;Ask questions, chat and learn with other Brian users, show off what you’ve done, suggest new features, … We will try out a brand new forum for support questions
and general discussion, replacing our previous forums on Google Groups. The new forum builds
on the &lt;a href="https://www.discourse.org/"&gt;Discourse&lt;/a&gt; platform which gives us exciting new features
such as giving credit to users for answering questions.&lt;/p&gt;
&lt;p&gt;Please join here &lt;span class="emoji"&gt;👉&lt;/span&gt; &lt;strong&gt;&lt;a href="https://brian.discourse.group"&gt;brian.discourse.group&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;center&gt;&lt;a href="https://brian.discourse.group"&gt;&lt;img alt="Forum screenshot" src="https://briansimulator.org/images/screenshot_forum.png"&gt;&lt;/a&gt;&lt;/center&gt;</description><category>community</category><guid>https://briansimulator.org/posts/2020/brian-discourse-forum/</guid><pubDate>Mon, 24 Aug 2020 16:05:44 GMT</pubDate></item><item><title>Brian online tutorial</title><link>https://briansimulator.org/posts/2020/brian-online-tutorial/</link><dc:creator>Brian team</dc:creator><description>&lt;p&gt;We will experiment with running a Brian tutorial online. The first tutorial of
this kind will take place on &lt;strong&gt;Friday, August 7th 2020&lt;/strong&gt; from &lt;strong&gt;2pm-6pm BST&lt;/strong&gt; (UTC+1, see &lt;a href="https://www.timeanddate.com/worldclock/fixedtime.html?msg=Brian+Online+Tutorial&amp;amp;iso=20200807T14&amp;amp;p1=136&amp;amp;ah=4"&gt;here for other timezones&lt;/a&gt;). Free (but mandatory)
registration &lt;a href="https://t.co/zS4VQ4Cp51?amp=1"&gt;here&lt;/a&gt;. We will run the tutorial as
a &lt;a href="https://zoom.us/"&gt;Zoom&lt;/a&gt; meeting – registering with the link will give you the URL (please don’t share so we can avoid zoombombing). We will record the meeting and
if everything goes reasonably well, we will upload the videos later.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; The recorded video is now on Youtube:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="text-error"&gt;In order to use the media directive, you must install the "micawber" Python package.&lt;/div&gt;
&lt;p&gt;If you participate, it would be really helpful if you could download and install Brian before the tutorial so that you can work along with it as we go. Instructions are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download and install the &lt;a href="https://www.anaconda.com/products/individual"&gt;Anaconda Python 3 distribution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open a command prompt and run the following lines:
    &lt;pre class="code literal-block"&gt;
&lt;i class="fa fa-chevron-right gp" aria-hidden="true"&gt; conda create -n brian_tutorial -c conda-forge python=3 brian2 matplotlib notebook nb_conda_kernels
&lt;i class="fa fa-chevron-right gp" aria-hidden="true"&gt; conda activate brian_tutorial
&lt;i class="fa fa-chevron-right gp" aria-hidden="true"&gt; pip install brian2tools
&lt;/i&gt;&lt;/i&gt;&lt;/i&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;You can now verify this is working by starting a Jupyter notebook server with:
    &lt;pre class="code literal-block"&gt;&lt;i class="fa fa-chevron-right gp" aria-hidden="true"&gt; jupyter notebook&lt;/i&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Your browser should open with the Jupyter notebooks interface. Now create a new notebook and put the following code in an empty cell:
    &lt;pre class="code literal-block"&gt;from brian2 import *&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;Run that cell by pressing Ctrl+Enter. If that works without any errors (you might see a warning) then you’re good to go.&lt;/li&gt;
&lt;li&gt;If that doesn’t work or you want to use a different system than Anaconda, take a look at our &lt;a href="https://brian2.readthedocs.io/en/stable/introduction/install.html"&gt;detailed installation instructions&lt;/a&gt;. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you have trouble installing, don’t worry. You can use the &lt;a href="http://mybinder.org/v2/gh/brian-team/brian2-binder/master?filepath=index.ipynb"&gt;Brian installation on Binder&lt;/a&gt; or &lt;a href="https://colab.research.google.com"&gt;Google Colab&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;For Colab, just make the first cell as follows:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
!pip install brian2
!pip install brian2tools
&lt;/pre&gt;

&lt;p&gt;Looking forward to seeing you all on Friday!&lt;/p&gt;</description><category>Teaching</category><guid>https://briansimulator.org/posts/2020/brian-online-tutorial/</guid><pubDate>Thu, 06 Aug 2020 13:27:27 GMT</pubDate></item><item><title>Making use of Python: threshold finding with bisection</title><link>https://briansimulator.org/posts/2020/elife-3-bisection/</link><dc:creator>Brian team</dc:creator><description>&lt;figure&gt;&lt;img src="https://briansimulator.org/images/articles/2020/elife_example_3_bisection.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;div class="alert alert-primary notebook-header" role="alert"&gt;
    &lt;p&gt;
    This article is written as a &lt;a href="https://jupyter.org"&gt;Jupyter notebook&lt;/a&gt; which you can execute and modify interactively.
    You can either download it via the "Source" link on the top right, or run it directly in the browser on the
    &lt;a href="https://mybinder.org"&gt;mybinder&lt;/a&gt; infrastructure: &lt;a href="https://mybinder.org/v2/gh/brian-team/briansimulator.org/master?filepath=articles%2F2020%2Felife_example_3_bisection.ipynb"&gt;
    &lt;img src="https://static.mybinder.org/badge_logo.svg" alt="Launch binder" class="d-inline-block"&gt;&lt;/a&gt;
    &lt;/p&gt;
    &lt;p&gt;&lt;strong&gt;For more information, see our general &lt;a href="https://briansimulator.org/posts/2020/notes-notebooks/"&gt;Notes on Notebooks&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
    &lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;div class="notebook-quickstart"&gt;
&lt;h4&gt;Quickstart&lt;/h4&gt;
To run the code below:
&lt;ol&gt;
&lt;li&gt;Click on the cell to select it.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;SHIFT+ENTER&lt;/code&gt; on your keyboard or press the play button
   (&lt;button class="fa fa-play icon-play btn btn-xs btn-default"&gt;&lt;/button&gt;) in the toolbar above&lt;/li&gt;
&lt;/ol&gt;
Feel free to create new cells using the plus button
(&lt;button class="fa fa-plus icon-plus btn btn-xs btn-default"&gt;&lt;/button&gt;), or pressing &lt;code&gt;SHIFT+ENTER&lt;/code&gt; while this cell
is selected.
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This article demonstrates how a control flow, where simulation parameters depend on the results of previous simulations, can be expressed by making use of standard control structures in Python. By having access to the full expressivity of a general purpose programming language, expressing such control flow is straight-forward; this would not be the case for a declarative model description.&lt;/p&gt;
&lt;p&gt;Our goal in this toy example is to find the threshold voltage of neuron as a function of the density of sodium channels.&lt;/p&gt;
&lt;p&gt;This example is from our eLife paper &lt;a href="https://elifesciences.org/articles/47314"&gt;(Stimberg et al. 2019)&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;&lt;a href="https://briansimulator.org/posts/2020/elife-3-bisection/"&gt;Read more…&lt;/a&gt; (15 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>model</category><guid>https://briansimulator.org/posts/2020/elife-3-bisection/</guid><pubDate>Thu, 30 Jan 2020 17:46:00 GMT</pubDate></item></channel></rss>